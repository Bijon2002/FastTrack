/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frontend;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import Backend.DBConnection;
import Backend.SimpleMailer;
import backend.SessionManager;

/**
 *
 * @author bijon
 */
public class AssignmentForm extends javax.swing.JFrame {

    /**
     * Creates new form AssignmentForm
     */
    public AssignmentForm() {
        initComponents();
           loadDropdowns(); // Fill combo boxes
        loadAssignmentsToTable(); // Show all assignments
    }

    
       // Load shipment and driver IDs into dropdowns
    private void loadDropdowns() {
        try (Connection con = DBConnection.getConnection()) {
            comboShipment.removeAllItems();
            comboDriver.removeAllItems();

            ResultSet rs1 = con.createStatement().executeQuery("SELECT id FROM shipments");
            while (rs1.next()) {
                comboShipment.addItem(String.valueOf(rs1.getInt("id")));
            }

            ResultSet rs2 = con.createStatement().executeQuery("SELECT driver_id FROM drivers");
            while (rs2.next()) {
                comboDriver.addItem(String.valueOf(rs2.getInt("driver_id")));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "❌ Error loading dropdowns!");
            e.printStackTrace();
        }
    }
    
    private boolean validateForm() {
        if (comboShipment.getSelectedItem() == null ||
            comboDriver.getSelectedItem() == null ||
            txtDate.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "⚠️ Please fill all fields!");
            return false;
        }

        if (!txtDate.getText().matches("\\d{4}-\\d{2}-\\d{2}")) {
            JOptionPane.showMessageDialog(this, "⚠️ Date must be in yyyy-mm-dd format!");
            return false;
        }

        return true;
    }
private void assignDriver() {
        if (!validateForm()) return;

        int shipmentId = Integer.parseInt(comboShipment.getSelectedItem().toString());
        int driverId = Integer.parseInt(comboDriver.getSelectedItem().toString());
        String date = txtDate.getText().trim();

        try (Connection con = DBConnection.getConnection()) {
            String sql = "INSERT INTO assignments (shipment_id, driver_id, assignment_date) VALUES (?, ?, ?)";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setInt(1, shipmentId);
            ps.setInt(2, driverId);
            ps.setDate(3, Date.valueOf(date));

            int result = ps.executeUpdate();

            if (result > 0) {
                JOptionPane.showMessageDialog(this, "✅ Assignment successful!");
                loadAssignmentsToTable();
                clearForm();
            } else {
                JOptionPane.showMessageDialog(this, "❌ Assignment failed!");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "❌ Error assigning driver!");
            e.printStackTrace();
        }
    }
 private void loadAssignmentsToTable() {
        try (Connection con = DBConnection.getConnection()) {
            String sql = "SELECT shipment_id, driver_id, assignment_date FROM assignments";
            ResultSet rs = con.createStatement().executeQuery(sql);
            DefaultTableModel model = new DefaultTableModel(
                new String[] {"Shipment ID", "Driver ID", "Date"}, 0
            );

            while (rs.next()) {
                model.addRow(new Object[] {
                    rs.getInt("shipment_id"),
                    rs.getInt("driver_id"),
                    rs.getDate("assignment_date").toString()
                });
            }

            tableAssign.setModel(model);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "❌ Error loading assignments!");
            e.printStackTrace();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
       private void clearForm() {
        comboShipment.setSelectedIndex(0);
        comboDriver.setSelectedIndex(0);
        txtDate.setText("");
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Back = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        comboShipment = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        comboDriver = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableAssign = new javax.swing.JTable();
        btnAssign = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        Back1 = new javax.swing.JButton();

        Back.setBackground(new java.awt.Color(0, 102, 0));
        Back.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Back.setForeground(new java.awt.Color(255, 255, 255));
        Back.setText("Back");
        Back.setBorder(null);
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 204));
        jLabel2.setText("Shipment and Driver Assignment");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        jLabel3.setText("Shipment ID");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(51, 87, -1, -1));

        comboShipment.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(comboShipment, new org.netbeans.lib.awtextra.AbsoluteConstraints(212, 84, 240, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        jLabel4.setText(" Driver ID  ");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(51, 135, -1, -1));

        comboDriver.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(comboDriver, new org.netbeans.lib.awtextra.AbsoluteConstraints(212, 132, 240, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI Emoji", 1, 14)); // NOI18N
        jLabel5.setText("Assignment Date ");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(51, 189, -1, -1));
        jPanel1.add(txtDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(212, 183, 240, -1));

        tableAssign.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Shipment ID", "Driver ID", "Date"
            }
        ));
        jScrollPane1.setViewportView(tableAssign);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 240, -1, 170));

        btnAssign.setBackground(new java.awt.Color(0, 0, 153));
        btnAssign.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnAssign.setForeground(new java.awt.Color(255, 255, 255));
        btnAssign.setText("Assign");
        btnAssign.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        btnAssign.setBorderPainted(false);
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });
        jPanel1.add(btnAssign, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 180, 80, 30));

        btnClear.setBackground(new java.awt.Color(0, 0, 153));
        btnClear.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnClear.setForeground(new java.awt.Color(255, 255, 255));
        btnClear.setText("Clear");
        btnClear.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        btnClear.setBorderPainted(false);
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        jPanel1.add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 180, 80, 30));

        jButton2.setBackground(new java.awt.Color(153, 0, 0));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Logout");
        jButton2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton2.setBorderPainted(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 430, 77, 40));

        Back1.setBackground(new java.awt.Color(0, 102, 0));
        Back1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Back1.setForeground(new java.awt.Color(255, 255, 255));
        Back1.setText("Back");
        Back1.setBorder(null);
        Back1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back1ActionPerformed(evt);
            }
        });
        jPanel1.add(Back1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 430, 80, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 733, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
         clearForm();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed

        int driverId = Integer.parseInt(comboDriver.getSelectedItem().toString());
        int shipmentId = Integer.parseInt(comboShipment.getSelectedItem().toString());
        String message="";
        
        
        String email = null;

    try {
        Connection con = DBConnection.getConnection(); // Your DB connector
        String sql = "SELECT email FROM drivers WHERE driver_id = ?";
        PreparedStatement stmt = con.prepareStatement(sql);
        stmt.setInt(1, driverId);

        ResultSet rs = stmt.executeQuery();

        if (rs.next()) {
            email = rs.getString("email");
        }

    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "❌ Failed to get driver email.");
    }
    
    try {
        Connection con = DBConnection.getConnection();
        String sql = "SELECT sender, receiver, distance, duration FROM shipments WHERE id = ?";
        PreparedStatement stmt = con.prepareStatement(sql);
        stmt.setInt(1, shipmentId);

        ResultSet rs = stmt.executeQuery();

        if (rs.next()) {
            String sender = rs.getString("sender");
            String receiver = rs.getString("receiver");
            double distance = rs.getDouble("distance");
            String duration = rs.getString("duration");

            message = "📦 Shipment Details:\n"
                    + "🚚 From: " + sender + "\n"
                    + "📍 To: " + receiver + "\n"
                    + "🛣️ Distance: " + distance + " km\n"
                    + "⏱️ Estimated Delivery Time: " + duration;
        } else {
            System.out.println("❌ No shipment found with ID: " + shipmentId); 
        }

    } catch (Exception e) {
        e.printStackTrace();
        message = "❌ Error fetching shipment data.";
    }

    assignDriver();
    SimpleMailer.sendEmail(email, "Shipments Assingments", message);
    

    }//GEN-LAST:event_btnAssignActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        SessionManager.logout();
        new login().setVisible(true);
        this.dispose();
        System.out.println("Logged out successfully.");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
        new dashboard().setVisible(true); // Go back to dashboard
        this.dispose(); // Close current form
    }//GEN-LAST:event_BackActionPerformed

    private void Back1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back1ActionPerformed
        // TODO add your handling code here:
        new dashboard().setVisible(true); // Go back to dashboard
        this.dispose(); // Close current form
    }//GEN-LAST:event_Back1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AssignmentForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AssignmentForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AssignmentForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AssignmentForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AssignmentForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JButton Back1;
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnClear;
    private javax.swing.JComboBox<String> comboDriver;
    private javax.swing.JComboBox<String> comboShipment;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableAssign;
    private javax.swing.JTextField txtDate;
    // End of variables declaration//GEN-END:variables
}
